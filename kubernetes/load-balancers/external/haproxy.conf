global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
#        ca-base /etc/ssl/certs
#        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.>
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128>
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SH>
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend rmccu-k8s-cluster
    bind *:7443
    mode tcp
    option tcplog
    default_backend rmccu-k8s-cluster-control-plane

backend rmccu-k8s-cluster-control-plane
    mode tcp
    balance roundrobin
    option tcp-check
    server k8s-controller-01.homelab.lan 192.168.20.7:6443 check fall 3 rise 2
    server k8s-controller-02.homelab.lan 192.168.20.8:6443 check fall 3 rise 2
    server k8s-controller-03.homelab.lan 192.168.20.9:6443 check fall 3 rise 2


frontend https-in
    bind *:443
    mode tcp
   ################ Example of migration process ################
   # 1) Create ACL for domain currently hosted on TrueNas
   # 2) Add The ACL to the proxmox backend
   # 3) The ACLs added to the proxmox backend will then forward
   #    traffic from those domains to the proxmox backend
   # 4) All other traffic will be default forwarded to TrueNas
   # acl is_migrated_01 hdr(host) -i migrated-01.example.com
   # acl is_migrated_02 hdr(host) -i migrated-02.example.com
   # acl is_migrated_03 hdr(host) -i migrated-03.example.com
   # acl is_migrated_04 hdr(host) -i migrated-04.example.com
   # acl is_migrated_05 hdr(host) -i migrated-05.example.com
   # use_backend proxmox-traefik-https if is_migrated_01 is_migrated_02 is_migrated_03 is_migrated>
#    acl is_migrated_01 hdr(host) -i nginx.rc-server.com
#    use_backend proxmox-traefik-https if is_migrated_01
#    acl is_proxmox hdr(host) -i proxmox.rc-server.com
#    use_backend proxmox_web_gui if is_proxmox
    default_backend truenas_backend

#backend proxmox_web_gui
#    mode tcp
#    server pveHost 10.243.0.3:8006

backend truenas_backend
    mode tcp
    server TrueNas 10.243.0.4:443

spec:

  # Configure Additional Volumes Here
  volumes:
    - name: ssl-certs
      persistentVolumeClaim:
        claimName: traefik-certs-claim

  containers:
    # Configure Certificate Settings Here
    additionalArguments:
    ####################### DNS Challenge With Cloudflare #######################
      - --entrypoints.websecure.http.tls.certresolver=cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=rc-server.com
      - --entrypoints.websecure.http.tls.domains[0].sans=*.rc-server.com
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=$(CF_ACME_EMAIL)
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1,$(CF_LOCAL_RESOLVER)
      - --certificatesresolvers.cloudflare.acme.storage= /ssl-certs/acme-cloudflare.json
#####################  HTTP Challenge With LetsEncrypt #####################
    # Staging
      - --certificatesresolvers.staging.acme.email=$(CF_ACME_EMAIL)
      - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web
      - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json
    # Production
      - --certificatesresolvers.production.acme.email=$(CF_ACME_EMAIL)
      - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web
      - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json

###################### Configure Logging Settings Here ######################
    logs:
      general:
        level: ERROR

##################### Configure Entrypoint Ports Here #######################
# NOTE: Default Port For web Is "80" And Default Port For websecure Is "443".
#       Explicitly Stating Both Here Though In Case HTTP/3 Is Enabled Later.
    ports:
      web:
        address: ":8080"
        # (Optional) Permanent Redirect To HTTPS
        redirectTo: websecure
      websecure:
        address: ":8443"
# Enable TLS Via Cloudflare As The Certificate Resolver Defined Above
        tls:
          enabled: true
          certResolver: cloudflare

##################### Configure Environment Variables #######################
    env:
      # DNS Challenge Credentials And ACME Email
       - name: CF_API_EMAIL
         valueFrom:
           secretKeyRef:
             key: email
             name: cf-creds
       - name: CF_DNS_API_TOKEN
         valueFrom:
           secretKeyRef:
             key: apiToken
             name: cf-creds
       - name: CF_ACME_EMAIL
         valueFrom:
           secretKeyRef:
             key: acmeEmail
             name: cf-creds
       - name: CF_LOCAL_RESOLVER
         valueFrom:
           secretKeyRef:
             key: localResolver
             name: cf-creds
############################# Disable Dashboard #############################
    ingressRoute:
      dashboard:
        enabled: false

############################ Persistent Storage #############################
    persistence:
      enabled: true
      name: ssl-certs
      path: /ssl-certs
      existingClaim:
        claimName: traefik-certs-claim

########################### Deployment Overrides ###########################
    deployment:
# Default Replica Count Is Set To "1"
#  - Special Attention Needed With TLS And Replica Count Due To Certificates
#  - Setting Replica Count Only Works With "kind: Deployment" (The Default)
#  - For Horizontal Scaling To Work, 'replicas' needs to be set to 'null'
      replicas: null
#
# Configure Initial Resources (Default CPU: 100m, Default Memory: 50Mi)
# These Settings Require The Metric Server To Be Up And Running
#
    resources:
      requests:
        cpu: "500m"
        memory: "300Mi"
      limits:
        cpu: "1000m"
        memory: "600Mi"
    # Configure Horizontal Pod Autoscaling And Which Resource To Monitor
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 80
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
          - type: Pods
            value: 1
            periodSeconds: 60


# The "volume-permissions" Init Container Is Required If Permission Issues Occur.
# Related Issue: https://github.com/containous/traefik/issues/6972
      initContainers:
        - name: volume-permissions
          image: busybox:1.31.1
          command: ["sh","-c","chmod -Rv 600 /ssl-certs/*"]
          volumeMounts:
            - name: ssl-certs
              mountPath: /ssl-certs

############## Set Traefik As The Default Ingress Controller ###############
    ingressClass:
      enabled: true
      isDefaultClass: true

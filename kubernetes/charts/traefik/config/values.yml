
# Configure Certificate Settings Here
certificateResolvers:
#####################  HTTP Challenge With LetsEncrypt #####################
  staging:
    acme:
      storage: /ssl-certs/acme-staging.json
      email: $(CF_ACME_EMAIL)
      caServer: https://acme-staging-v02.api.letsencrypt.org/directory
      httpChallenge:
        entrypoint:
          web:
  production:
    acme:
      storage: /ssl-certs/acme-production.json
      email: $(CF_ACME_EMAIL)
      caServer: https://acme-v02.api.letsencrypt.org/directory
      httpChallenge:
        entrypoint:
          web:
####################### DNS Challenge With Cloudflare #######################
  cloudflare:
    acme:
      email: $(CF_ACME_EMAIL)
      storage: /ssl-certs/acme-cloudflare.json
      dnsChallenge:
        provider: cloudflare
        resolvers:
          - $(CF_LOCAL_RESOLVER)
          - "1.1.1.1:53"

###################### Configure Logging Settings Here ######################
logs:
  general:
    level: ERROR

##################### Configure Entrypoint Ports Here #######################
# NOTE: Default Port For web Is "80" And Default Port For websecure Is "443".
#       Explicitly Stating Both Here Though In Case HTTP/3 Is Enabled Later.
ports:
  web:
    address: ":80"
    # (Optional) Permanent Redirect To HTTPS
    redirectTo: websecure
  websecure:
    address: ":443"
# Enable TLS Via Cloudflare As The Certificate Resolver Defined Above
    tls:
      enabled: true
      certResolver: cloudflare

##################### Configure Environment Variables #######################
env:
# DNS Challenge Credentials And ACME Email
   - name: CF_API_EMAIL
     valueFrom:
       secretKeyRef:
         key: email
         name: cf-creds
   - name: CF_DNS_API_TOKEN
     valueFrom:
       secretKeyRef:
         key: apiToken
         name: cf-creds
   - name: CF_ACME_EMAIL
     valueFrom:
       secretKeyRef:
         key: acmeEmail
         name: cf-creds
   - name: CF_LOCAL_RESOLVER
     valueFrom:
       secretKeyRef:
         key: localResolver
         name: cf-creds
############################# Disable Dashboard #############################
ingressRoute:
  dashboard:
    enabled: false

############################ Persistent Storage #############################
persistence:
  enabled: true
  name: ssl-certs
  size: 1Gi
  path: /ssl-certs

########################### Deployment Overrides ###########################
deployment:
# Default Replica Count Is Set To "1"
#  - Special Attention Needed With TLS And Replica Count Due To Certificates
#  - Setting Replica Count Only Works With "kind: Deployment" (The Default)
#  - For Horizontal Scaling To Work, 'replicas' needs to be set to 'null'
  replicas: 1
#
# Configure Initial Resources (Default CPU: 100m, Default Memory: 50Mi)
# These Settings Require The Metric Server To Be Up And Running (Currently It Isn't)
#
#resources:
#  requests:
#    cpu: "300m"
#    memory: "100Mi"
#  limits:
#    cpu: "1000m"
#    memory: "500Mi"
#  # Configure Horizontal Pod Autoscaling And Which Resource To Monitor
#  autoscaling:
#    enabled: true
#    maxReplicas: 3
#    metrics:
#    - type: Resource
#      resource:
#        name: cpu
#        target:
#          type: Utilization
#          averageUtilization: 80
#
# The "volume-permissions" Init Container Is Required If Permission Issues Occur.
# Related Issue: https://github.com/containous/traefik/issues/6972
  initContainers:
    - name: volume-permissions
      image: busybox:1.31.1
      command: ["sh", "-c", "chmod -Rv 600 /ssl-certs/*"]
      volumeMounts:
        - name: ssl-certs
          mountPath: /ssl-certs

############## Set Traefik As The Default Ingress Controller ###############
ingressClass:
  enabled: true
  isDefaultClass: true
